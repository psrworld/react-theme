{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/ThemeProvider.tsx","../src/ThemeToggle.tsx"],"sourcesContent":["import { ThemeMode, ResolvedTheme, ThemeConfig } from './types';\n\nexport const DEFAULT_CONFIG: Required<ThemeConfig> = {\n  defaultMode: 'system',\n  storageKey: 'psr-theme',\n  attribute: 'class',\n  themes: {},\n  disableTransitions: false,\n  enableSystem: true,\n  storageProvider: typeof window !== 'undefined' ? window.localStorage : ({} as Storage),\n};\n\n/**\n * Get system theme preference\n */\nexport const getSystemTheme = (): ResolvedTheme => {\n  if (typeof window === 'undefined') return 'light';\n  \n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\n\n/**\n * Resolve theme mode to actual theme\n */\nexport const resolveTheme = (mode: ThemeMode): ResolvedTheme => {\n  if (mode === 'system') {\n    return getSystemTheme();\n  }\n  return mode;\n};\n\n/**\n * Get stored theme from localStorage\n */\nexport const getStoredTheme = (storageKey: string, storageProvider: Storage): ThemeMode | null => {\n  try {\n    if (typeof window === 'undefined') return null;\n    return (storageProvider.getItem(storageKey) as ThemeMode) || null;\n  } catch (error) {\n    console.warn('Failed to get theme from storage:', error);\n    return null;\n  }\n};\n\n/**\n * Store theme in localStorage\n */\nexport const setStoredTheme = (mode: ThemeMode, storageKey: string, storageProvider: Storage): void => {\n  try {\n    if (typeof window === 'undefined') return;\n    storageProvider.setItem(storageKey, mode);\n  } catch (error) {\n    console.warn('Failed to store theme:', error);\n  }\n};\n\n/**\n * Apply theme to document\n */\nexport const applyTheme = (\n  theme: ResolvedTheme,\n  attribute: string,\n  disableTransitions: boolean = false\n): void => {\n  if (typeof window === 'undefined') return;\n\n  const root = document.documentElement;\n  \n  // Disable transitions temporarily\n  if (disableTransitions) {\n    const style = document.createElement('style');\n    style.textContent = '*, *::before, *::after { transition: none !important; }';\n    document.head.appendChild(style);\n    \n    requestAnimationFrame(() => {\n      document.head.removeChild(style);\n    });\n  }\n\n  // Apply theme\n  if (attribute === 'class') {\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n  } else {\n    root.setAttribute(attribute, theme);\n  }\n\n  // Set color-scheme for better native styling\n  root.style.colorScheme = theme;\n};\n\n/**\n * Create media query listener for system theme changes\n */\nexport const createSystemThemeListener = (callback: (theme: ResolvedTheme) => void) => {\n  if (typeof window === 'undefined') return () => {};\n\n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n  const listener = (e: MediaQueryListEvent) => {\n    callback(e.matches ? 'dark' : 'light');\n  };\n\n  mediaQuery.addEventListener('change', listener);\n  \n  return () => mediaQuery.removeEventListener('change', listener);\n};\n\n/**\n * Get next theme in cycle (light -> dark -> system -> light)\n */\nexport const getNextTheme = (currentMode: ThemeMode): ThemeMode => {\n  const cycle: ThemeMode[] = ['light', 'dark', 'system'];\n  const currentIndex = cycle.indexOf(currentMode);\n  \n  // Handle case where currentMode is not found in cycle\n  if (currentIndex === -1) {\n    return 'light'; // Default fallback\n  }\n  \n  const nextIndex = (currentIndex + 1) % cycle.length;\n  const nextTheme = cycle[nextIndex];\n  \n  // TypeScript safety - this should never happen but satisfies strict checking\n  return nextTheme || 'light';\n};\n\n/**\n * Toggle between light and dark (ignoring system)\n */\nexport const toggleLightDark = (currentMode: ThemeMode): ThemeMode => {\n  const resolvedTheme = resolveTheme(currentMode);\n  return resolvedTheme === 'light' ? 'dark' : 'light';\n};\n\n/**\n * Check if code is running in browser\n */\nexport const isBrowser = typeof window !== 'undefined';\n\n/**\n * Debounce function for performance optimization\n */\nexport const debounce = <T extends (...args: any[]) => void>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * Get theme CSS variables\n */\nexport const getThemeVariables = (theme: ResolvedTheme): Record<string, string> => {\n  const lightVars = {\n    '--background': '0 0% 100%',\n    '--foreground': '222.2 84% 4.9%',\n    '--card': '0 0% 100%',\n    '--card-foreground': '222.2 84% 4.9%',\n    '--popover': '0 0% 100%',\n    '--popover-foreground': '222.2 84% 4.9%',\n    '--primary': '222.2 47.4% 11.2%',\n    '--primary-foreground': '210 40% 98%',\n    '--secondary': '210 40% 96%',\n    '--secondary-foreground': '222.2 84% 4.9%',\n    '--muted': '210 40% 96%',\n    '--muted-foreground': '215.4 16.3% 46.9%',\n    '--accent': '210 40% 96%',\n    '--accent-foreground': '222.2 84% 4.9%',\n    '--destructive': '0 84.2% 60.2%',\n    '--destructive-foreground': '210 40% 98%',\n    '--border': '214.3 31.8% 91.4%',\n    '--input': '214.3 31.8% 91.4%',\n    '--ring': '222.2 84% 4.9%',\n    '--radius': '0.5rem',\n  };\n\n  const darkVars = {\n    '--background': '222.2 84% 4.9%',\n    '--foreground': '210 40% 98%',\n    '--card': '222.2 84% 4.9%',\n    '--card-foreground': '210 40% 98%',\n    '--popover': '222.2 84% 4.9%',\n    '--popover-foreground': '210 40% 98%',\n    '--primary': '210 40% 98%',\n    '--primary-foreground': '222.2 47.4% 11.2%',\n    '--secondary': '217.2 32.6% 17.5%',\n    '--secondary-foreground': '210 40% 98%',\n    '--muted': '217.2 32.6% 17.5%',\n    '--muted-foreground': '215 20.2% 65.1%',\n    '--accent': '217.2 32.6% 17.5%',\n    '--accent-foreground': '210 40% 98%',\n    '--destructive': '0 62.8% 30.6%',\n    '--destructive-foreground': '210 40% 98%',\n    '--border': '217.2 32.6% 17.5%',\n    '--input': '217.2 32.6% 17.5%',\n    '--ring': '212.7 26.8% 83.9%',\n    '--radius': '0.5rem',\n  };\n\n  return theme === 'dark' ? darkVars : lightVars;\n};","import React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { ThemeMode, ResolvedTheme, ThemeContextValue, ThemeProviderProps } from './types';\nimport {\n  DEFAULT_CONFIG,\n  getSystemTheme,\n  resolveTheme,\n  getStoredTheme,\n  setStoredTheme,\n  applyTheme,\n  createSystemThemeListener,\n  toggleLightDark,\n  isBrowser,\n} from './utils';\n\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children,\n  defaultMode = DEFAULT_CONFIG.defaultMode,\n  storageKey = DEFAULT_CONFIG.storageKey,\n  attribute = DEFAULT_CONFIG.attribute,\n  themes = DEFAULT_CONFIG.themes,\n  disableTransitions = DEFAULT_CONFIG.disableTransitions,\n  enableSystem = DEFAULT_CONFIG.enableSystem,\n  storageProvider = DEFAULT_CONFIG.storageProvider,\n}) => {\n  const [mode, setModeState] = useState<ThemeMode>(defaultMode);\n  const [systemTheme, setSystemTheme] = useState<ResolvedTheme>(() => \n    isBrowser ? getSystemTheme() : 'light'\n  );\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Resolve current theme\n  const theme = resolveTheme(mode === 'system' ? systemTheme : mode);\n\n  // Initialize theme on mount\n  useEffect(() => {\n    if (!isBrowser) {\n      setIsLoading(false);\n      return;\n    }\n\n    const storedTheme = getStoredTheme(storageKey, storageProvider);\n    const initialMode = storedTheme || defaultMode;\n    \n    setModeState(initialMode);\n    setSystemTheme(getSystemTheme());\n    \n    // Apply theme immediately to prevent flash\n    const resolvedTheme = resolveTheme(initialMode === 'system' ? getSystemTheme() : initialMode);\n    applyTheme(resolvedTheme, attribute, disableTransitions);\n    \n    setIsLoading(false);\n  }, []);\n\n  // Apply theme when it changes\n  useEffect(() => {\n    if (!isBrowser || isLoading) return;\n    \n    applyTheme(theme, attribute, disableTransitions);\n  }, [theme, attribute, disableTransitions, isLoading]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    if (!isBrowser || !enableSystem) return;\n\n    const cleanup = createSystemThemeListener((newSystemTheme) => {\n      setSystemTheme(newSystemTheme);\n    });\n\n    return cleanup;\n  }, [enableSystem]);\n\n  // Set theme mode\n  const setMode = useCallback((newMode: ThemeMode) => {\n    setModeState(newMode);\n    setStoredTheme(newMode, storageKey, storageProvider);\n  }, [storageKey, storageProvider]);\n\n  // Toggle between light and dark\n  const toggleTheme = useCallback(() => {\n    const newMode = toggleLightDark(mode);\n    setMode(newMode);\n  }, [mode, setMode]);\n\n  const value: ThemeContextValue = {\n    mode,\n    theme,\n    setMode,\n    toggleTheme,\n    systemTheme,\n    modes: enableSystem ? ['light', 'dark', 'system'] : ['light', 'dark'],\n    isLoading,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): ThemeContextValue => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Higher-order component for theme integration\nexport const withTheme = <P extends object>(\n  Component: React.ComponentType<P>\n): React.ComponentType<P> => {\n  const WithThemeComponent = (props: P) => {\n    const theme = useTheme();\n    return <Component {...props} theme={theme} />;\n  };\n\n  WithThemeComponent.displayName = `withTheme(${Component.displayName || Component.name})`;\n  return WithThemeComponent;\n};\n\nexport default ThemeProvider;","import React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport { ThemeToggleProps, ThemeMode } from './types';\n\n// Default icons (using simple SVG icons)\nconst SunIcon = ({ className = '' }: { className?: string }) => (\n  <svg\n    className={className}\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"5\" />\n    <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\" />\n  </svg>\n);\n\nconst MoonIcon = ({ className = '' }: { className?: string }) => (\n  <svg\n    className={className}\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\n  </svg>\n);\n\nconst SystemIcon = ({ className = '' }: { className?: string }) => (\n  <svg\n    className={className}\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\" />\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\" />\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\" />\n  </svg>\n);\n\nconst defaultIcons = {\n  light: <SunIcon />,\n  dark: <MoonIcon />,\n  system: <SystemIcon />,\n};\n\nconst defaultLabels = {\n  light: 'Light',\n  dark: 'Dark',\n  system: 'System',\n};\n\nconst sizeClasses = {\n  sm: 'h-8 w-8 text-sm',\n  md: 'h-10 w-10 text-base',\n  lg: 'h-12 w-12 text-lg',\n};\n\nconst variantClasses = {\n  default: 'bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-700',\n  outline: 'border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-800',\n  ghost: 'text-gray-900 dark:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800',\n};\n\nexport const ThemeToggle: React.FC<ThemeToggleProps> = ({\n  className = '',\n  size = 'md',\n  variant = 'default',\n  showLabels = false,\n  labels = defaultLabels,\n  icons = defaultIcons,\n  onThemeChange,\n}) => {\n  const { mode, setMode, modes } = useTheme();\n\n  const handleToggle = () => {\n    const currentIndex = modes.indexOf(mode);\n    const nextIndex = (currentIndex + 1) % modes.length;\n    const nextMode = modes[nextIndex];\n    \n    // Type assertion to ensure nextMode is treated as ThemeMode\n    // This is safe because modes array contains only valid ThemeMode values\n    if (nextMode) {\n      setMode(nextMode as ThemeMode);\n      onThemeChange?.(nextMode as ThemeMode);\n    }\n  };\n\n  const currentIcon = icons[mode] || defaultIcons[mode];\n  const currentLabel = labels[mode] || defaultLabels[mode];\n\n  return (\n    <button\n      onClick={handleToggle}\n      className={`\n        inline-flex items-center justify-center rounded-md font-medium\n        transition-colors focus-visible:outline-none focus-visible:ring-2\n        focus-visible:ring-ring focus-visible:ring-offset-2\n        disabled:opacity-50 disabled:pointer-events-none\n        ${sizeClasses[size]}\n        ${variantClasses[variant]}\n        ${className}\n      `}\n      type=\"button\"\n      aria-label={`Switch to ${modes[(modes.indexOf(mode) + 1) % modes.length]} mode`}\n      title={`Current: ${currentLabel}. Click to cycle through themes.`}\n    >\n      <span className=\"flex items-center gap-2\">\n        {currentIcon}\n        {showLabels && <span className=\"hidden sm:inline\">{currentLabel}</span>}\n      </span>\n    </button>\n  );\n};\n\n// Dropdown version of theme toggle\nexport const ThemeToggleDropdown: React.FC<ThemeToggleProps> = ({\n  className = '',\n  size = 'md',\n  variant = 'default',\n  labels = defaultLabels,\n  icons = defaultIcons,\n  onThemeChange,\n}) => {\n  const { mode, setMode, modes } = useTheme();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleModeSelect = (selectedMode: ThemeMode) => {\n    setMode(selectedMode);\n    setIsOpen(false);\n    onThemeChange?.(selectedMode);\n  };\n\n  const currentIcon = icons[mode] || defaultIcons[mode];\n\n  return (\n    <div className=\"relative\">\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className={`\n          inline-flex items-center justify-center rounded-md font-medium\n          transition-colors focus-visible:outline-none focus-visible:ring-2\n          focus-visible:ring-ring focus-visible:ring-offset-2\n          disabled:opacity-50 disabled:pointer-events-none\n          ${sizeClasses[size]}\n          ${variantClasses[variant]}\n          ${className}\n        `}\n        type=\"button\"\n        aria-label=\"Open theme selector\"\n        aria-expanded={isOpen}\n      >\n        {currentIcon}\n      </button>\n      \n      {isOpen && (\n        <>\n          <div\n            className=\"fixed inset-0 z-10\"\n            onClick={() => setIsOpen(false)}\n            aria-hidden=\"true\"\n          />\n          <div className=\"absolute right-0 z-20 mt-2 w-32 origin-top-right rounded-md bg-white dark:bg-gray-800 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              {modes.map((themeMode) => (\n                <button\n                  key={themeMode}\n                  onClick={() => handleModeSelect(themeMode)}\n                  className={`\n                    flex w-full items-center gap-2 px-4 py-2 text-sm text-left\n                    hover:bg-gray-100 dark:hover:bg-gray-700\n                    ${mode === themeMode ? 'bg-gray-100 dark:bg-gray-700' : ''}\n                  `}\n                  type=\"button\"\n                >\n                  {icons[themeMode] || defaultIcons[themeMode]}\n                  {labels[themeMode] || defaultLabels[themeMode]}\n                </button>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\n// Simple text-based theme toggle\nexport const ThemeToggleText: React.FC<ThemeToggleProps> = ({\n  className = '',\n  labels = defaultLabels,\n  onThemeChange,\n}) => {\n  const { mode, setMode, modes } = useTheme();\n\n  const handleToggle = () => {\n    const currentIndex = modes.indexOf(mode);\n    const nextIndex = (currentIndex + 1) % modes.length;\n    const nextMode = modes[nextIndex];\n    \n    // Type assertion to ensure nextMode is treated as ThemeMode\n    // This is safe because modes array contains only valid ThemeMode values\n    if (nextMode) {\n      setMode(nextMode as ThemeMode);\n      onThemeChange?.(nextMode as ThemeMode);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleToggle}\n      className={`\n        text-sm font-medium text-gray-700 dark:text-gray-300\n        hover:text-gray-900 dark:hover:text-gray-100\n        transition-colors\n        ${className}\n      `}\n      type=\"button\"\n    >\n      {labels[mode] || defaultLabels[mode]}\n    </button>\n  );\n};\n\nexport default ThemeToggle;"],"names":["createContext","useState","useEffect","useCallback","_jsx","useContext","_jsxs","_Fragment"],"mappings":"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"}